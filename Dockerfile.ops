# -*- mode: dockerfile -*-
# vi: set ft=dockerfile :

#FROM linuxkit/kernel:4.9.44 as ksrc
#FROM linuxkit/kernel:4.4.93 as ksrc
FROM demesne

ENV TERRAFORM_VERSION 0.11.13
ENV TERRAGRUNT_VERSION 0.18.7
ENV PACKER_VERSION 1.4.3
ENV AWLESS_VERSION 0.1.11
ENV MINIKUBE_VERSION 0.27.0
ENV KUBECTL_VERSION 1.10.3
ENV HELM_VERSION 2.9.1
#ENV GOAD_VERSION 2.0.4
#ENV K6_VERSION 0.18.0
ENV DOCKER_MACHINE_VERSION 0.16.0

RUN sudo apt install -y zip

ENV TERRAFORM_ZIPBALL https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip

RUN curl -sL -o terraform.zip $TERRAFORM_ZIPBALL && \
    unzip terraform.zip && \
    sudo install -m 0755 -p terraform /usr/local/bin/ && \
    rm -f terraform terraform.zip

ENV TERRAGRUNT_BINARY https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64

RUN curl -sL -o terragrunt $TERRAGRUNT_BINARY && \
    sudo install -m 0755 -p terragrunt /usr/local/bin/ && \
    rm -f terragrunt

ENV PACKER_ZIPBALL https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip

RUN curl -sL -o packer.zip $PACKER_ZIPBALL && \
    unzip packer.zip && \
    sudo install -m 0755 -p packer /usr/local/bin/ && \
    rm -f packer packer.zip

RUN sudo apt install -y python3.7 python3-pip groff less && \
    sudo pip3 install --upgrade pip && \
    sudo pip3 install awscli && \
    sudo pip3 install awslogs && \
    sudo pip3 install aws-shell

ENV AWLESS_TARBALL https://github.com/wallix/awless/releases/download/v${AWLESS_VERSION}/awless-linux-amd64.tar.gz
RUN curl -skL $AWLESS_TARBALL | sudo tar zxf - -C /usr/local/bin

ENV MINIKUBE_URL https://storage.googleapis.com/minikube/releases/v$MINIKUBE_VERSION/minikube-linux-amd64
RUN \
    curl -sLo minikube $MINIKUBE_URL && \
    sudo install -m 0755 -p minikube /usr/local/bin/ && \
    rm -f minikube

ENV KUBECTL_URL https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VERSION/bin/linux/amd64/kubectl
RUN \
    curl -sLo kubectl $KUBECTL_URL && \
    sudo install -m 0755 -p kubectl /usr/local/bin/ && \
    rm -f kubectl

ENV HELM_URL https://storage.googleapis.com/kubernetes-helm/helm-v$HELM_VERSION-linux-amd64.tar.gz
RUN \
    curl -sL $HELM_URL | \
    sudo tar zxf - -C /usr/local/bin/ --strip-components=1 linux-amd64/helm

#RUN \
#    curl -sL https://repo.saltstack.com/apt/debian/9/amd64/latest/SALTSTACK-GPG-KEY.pub | sudo apt-key add - && \
#    sudo apt-add-repository 'deb http://repo.saltstack.com/apt/debian/9/amd64/latest stretch main' && \
#    sudo apt-get update && \
#    sudo apt-get install -y salt-master salt-minion salt-ssh salt-syndic salt-cloud salt-api

#ENV GOAD_ZIPBALL https://github.com/goadapp/goad/releases/download/${GOAD_VERSION}/goad-linux-x86-64.zip
#RUN curl -sL -o goad.zip $GOAD_ZIPBALL && \
#    unzip goad.zip && \
#    sudo install -m 0755 goad /usr/local/bin/ && \
#    rm -f goad goad.zip

#ENV K6_TARBALL https://github.com/loadimpact/k6/releases/download/v${K6_VERSION}/k6-v${K6_VERSION}-linux64.tar.gz
#RUN curl -sL $K6_TARBALL | sudo tar zxf - -C /usr/local/bin/ --strip-components=1 k6-v${K6_VERSION}-linux64/k6

ENV DOCKER_MACHINE_URL https://github.com/docker/machine/releases/download/v0.16.0/docker-machine-Linux-x86_64
RUN \
    curl -sLo docker-machine $DOCKER_MACHINE_URL && \
    sudo install -m 0755 -p docker-machine /usr/local/bin/ && \
    rm -f docker-machine

#RUN \
#    curl -sL https://packages.chef.io/chef.asc | sudo apt-key add - && \
#    sudo apt-add-repository 'deb https://packages.chef.io/repos/apt/current jessie main' && \
#    sudo apt-get update && \
#    sudo apt-get install -y chefdk && \
#    sudo /opt/chefdk/embedded/bin/gem install kitchen-salt
#
#COPY --from=ksrc /kernel-dev.tar /tmp
#COPY --from=ksrc /kernel.tar /tmp
#RUN sudo tar xf /tmp/kernel-dev.tar -C /
#RUN sudo tar xf /tmp/kernel.tar -C /
#RUN \
#    v=$(uname -r | awk -F- '{print $1}') && \
#    sudo ln -s /lib/modules/${v}-linuxkit /lib/modules/$(uname -r) && \
#    sudo ln -s /usr/src/linux-headers-${v}-linuxkit /usr/src/linux-headers-$(uname -r) && \
#    sudo make -C /usr/src/linux-headers-$(uname -r) oldconfig && \
#    sudo find /usr/src/linux-headers-$(uname -r)/ -type f | xargs grep -Hi -- -linuxkit | awk -F: '{print $1}' | sort | uniq | xargs -r sudo sed -i -e 's/-linuxkit/-boot2docker/g' && \
#    echo 'CONFIG_UNUSED_SYMBOLS=y' | sudo tee -a /usr/src/linux-headers-$(uname -r)/.config
#
#RUN \
#    curl -sL https://www.virtualbox.org/download/oracle_vbox_2016.asc | sudo apt-key add - && \
#    curl -sL https://www.virtualbox.org/download/oracle_vbox.asc | sudo apt-key add - && \
#    sudo apt-add-repository 'deb http://download.virtualbox.org/virtualbox/debian stretch contrib' && \
#    sudo apt-get update && \
#    sudo apt-get install -y musl && \
#    sudo apt-get install -y virtualbox-5.1 && \
#    sudo /usr/lib/virtualbox/vboxdrv.sh setup || true && \
#    sudo /usr/lib/virtualbox/vboxdrv.sh setup || true

ENV PAGER /usr/bin/less

ENTRYPOINT ["/bin/bash"]
