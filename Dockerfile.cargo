# -*- mode: dockerfile -*-
# vi: set ft=dockerfile :

FROM demesne

RUN sudo mkdir -p /usr/local && sudo chown -R $USER /usr/local

RUN sudo apt-get install -y build-essential pkg-config libssl-dev zlib1g-dev cmake musl-tools libcurl4-openssl-dev
ENV SSL_VER=1.1.0e
ENV CURL_VER=7.54.0
ENV CC=musl-gcc
ENV PREFIX=/usr/local
ENV PATH=/usr/local/bin:$PATH
ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
ENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
ENV SSL_CERT_DIR=/etc/ssl/certs
ENV OPENSSL_LIB_DIR=$PREFIX/lib
ENV OPENSSL_INCLUDE_DIR=$PREFIX/include
ENV OPENSSL_DIR=$PREFIX
ENV OPENSSL_STATIC=1

RUN ssl_src=$(mktemp -d) && \
    curl -sL http://www.openssl.org/source/openssl-$SSL_VER.tar.gz | tar xz -C $ssl_src && \
    cd $ssl_src/openssl-$SSL_VER && \
    ./Configure \
      no-async \
      no-shared \
      no-afalgeng \
      --prefix=$PREFIX \
      --openssldir=$PREFIX/ssl \
      no-zlib \
      linux-x86_64 \
      -fPIC && \
    make depend 2>/dev/null && \
    make -j$(nproc) && \
    make install && \
    cd - && \
    rm -rf $ssl_src

RUN curl_src=$(mktemp -d) && \
    curl https://curl.haxx.se/download/curl-$CURL_VER.tar.gz | tar xz -C $curl_src && \
    cd $curl_src/curl-$CURL_VER && \
    ./configure \
      --enable-shared=no \
      --enable-static=ssl \
      --enable-optimize \
      --prefix=$PREFIX \
      --with-ca-path=/etc/ssl/certs/ \
      --with-ca-bundle=/etc/ssl/certs/ca-certificates.crt \
      --without-ca-fallback && \
    make -j$(nproc) && \
    make install && \
    cd - && \
    rm -rf $curl_src

RUN curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
RUN mkdir -p $HOME/.cargo
ENV PATH $HOME/.cargo/bin:$PATH

RUN cargo install rustfmt

RUN rustup target add x86_64-unknown-linux-musl
RUN echo "[build]\ntarget=\"x86_64-unknown-linux-musl\"\n[target.x86_64-unknown-linux-musl]\nlinker = \"musl-gcc\"" >$HOME/.cargo/config

ENTRYPOINT ["/bin/bash"]
