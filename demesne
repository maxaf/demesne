#!/bin/bash

#set -e

container=$(basename $(readlink -f $0))
cmd=$(basename $0)
root=$(readlink -f $(dirname $0))
hostfs=/hostfs/${container}
pwd=$hostfs/$PWD

function log {
  >>$root/demesne.log echo "[$(date)] $@"
}

#echo "container = $container"
#echo "cmd       = $cmd"
#echo "root      = $root"
#echo "hostfs    = $hostfs"
#exit 0

function build {
  docker build \
    -t demesne \
    -f $root/Dockerfile.base \
    $root \
    --build-arg USER=demesne \
    --build-arg UID=$(id -u) \
    --build-arg GID=$(id -g)
  docker build \
    -t $container \
    --rm \
    $root
}

function get_label {
  label=$1
  docker inspect --format="{{ index .Config.Labels \"demesne.${label}\"}}" $container
}

function docker_exec {
  env=()
  for line in $(grep -v '^#' $root/.env 2>/dev/null || true); do
    IFS== read key value <<<"$line"
    if [ "$value" == "" ]; then
      value=${!key}
    fi
    env+=(-e $key=$value)
  done
  args=()
  for arg in $@; do
    if [[ "$arg" == /* ]]; then
      args+=(${hostfs}$arg)
    else
      args+=($arg)
    fi
  done
  log ${args[@]}
  term=""
  if [ -t 1 ]; then
    term="-t"
  fi
  exec docker exec ${env[@]} -i $term $container bash -c "cd $pwd; exec /usr/bin/env PS1='\\w \\$ ' \$@" -- "${args[@]}" 2>&1
}

function clean_up {
  docker stop $container || true
  docker rm -f $container || true
  docker rmi -f $container:latest
  docker rmi -f demesne:latest
}

if [ "$(docker images -q $container)" == "" ]; then
  build
else
  dockerfile_time=$(stat -c %Y $root/Dockerfile | sort -nr | head -1)
  build_time=$(get_label 'build_time')
  if [ ${build_time:-$(date +%s)} -lt $dockerfile_time ]; then
    clean_up
    build
  fi
fi

if [ "$(docker ps -qa -f name=$container)" == "" ]; then
  docker run \
    -h $container \
    -P \
    -v /:$hostfs \
    -w $pwd \
    -td \
    --name $container \
    --entrypoint /bin/bash \
    --label demesne.build_time=$(date +%s) \
    --cap-add=SYS_ADMIN \
    --cap-add=SYS_PTRACE \
    --privileged \
    $container \
    >/dev/null
fi

if [ "$(docker ps -qa -f name=$container -f status=running)" == "" ]; then
  docker start $container >/dev/null
fi

if [ "$cmd" == ".shell" ]; then
  docker_exec bash
else
  docker_exec "$cmd $@"
fi
